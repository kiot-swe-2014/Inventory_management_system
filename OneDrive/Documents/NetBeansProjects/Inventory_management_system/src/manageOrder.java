
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.*;
import common.openPdf;
import dbc.connect;
import common.inventoryUtils;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author kasso
 */
public class manageOrder extends javax.swing.JFrame {

    private int appcus = 0;
    private int apppro = 0;
    private int finaltotalprice = 0;
    private String orderId = "";

    /**
     * Creates new form manageOrder
     */
    public manageOrder() {
        initComponents();
        setLocationRelativeTo(null);
    }

    private void clearProductFields() {
        apppro = 0;
        txtproname.setText("");
        txtpr.setText("");
        txtds.setText("");
        txtquant.setText("");
    }

    public String getUniqueId(String prefix) {
        return prefix + System.nanoTime();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblcus = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblpro = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblcart = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtcusname = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtmob = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtproname = new javax.swing.JTextField();
        txtquant = new javax.swing.JTextField();
        lblquant = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtds = new javax.swing.JTextField();
        txtpr = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnadd = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        lblftp = new javax.swing.JLabel();
        btnsave = new javax.swing.JButton();
        btnrst = new javax.swing.JButton();
        btncls = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        jLabel1.setText("Manage Order");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 16, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Customer List");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        tblcus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Mobile Number", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblcus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcusMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblcus);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 350, 300));

        tblpro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Price", "Description", "Category ID", "Category Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblpro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblproMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblpro);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 100, 468, 300));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Product List");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Cart");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 80, -1, -1));

        tblcart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Name", "Quantity", "Price", "Description", "Sub Total"
            }
        ));
        tblcart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblcartMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblcart);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 100, 420, 300));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel5.setText("Selected Customer");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Name");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 104, -1));

        txtcusname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtcusname, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 190, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Mobile Number");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, -1, -1));

        txtmob.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtmob, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 510, 190, -1));

        txtemail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 550, 190, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Email");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 104, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Product Name");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 470, -1, -1));

        txtproname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtproname, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 470, 222, -1));

        txtquant.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtquant, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 590, 222, -1));

        lblquant.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblquant.setText("Order Quantity");
        getContentPane().add(lblquant, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 590, -1, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Product Description");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 510, -1, 30));

        txtds.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtds, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 510, 222, -1));

        txtpr.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtpr, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 550, 222, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Product Price");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 550, -1, 30));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel13.setText("Selected Product");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 430, -1, -1));

        btnadd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnadd.setText("Add To Cart");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        getContentPane().add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 630, 400, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setText("Total Amount Birr:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 420, -1, -1));

        lblftp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblftp.setText("0000");
        getContentPane().add(lblftp, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 420, -1, -1));

        btnsave.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnsave.setText("Save Order Details");
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 460, 380, -1));

        btnrst.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnrst.setText("Reset");
        btnrst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrstActionPerformed(evt);
            }
        });
        getContentPane().add(btnrst, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 500, 130, 40));

        btncls.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btncls.setForeground(new java.awt.Color(255, 51, 51));
        btncls.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        btncls.setText("Close");
        btncls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclsActionPerformed(evt);
            }
        });
        getContentPane().add(btncls, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 500, 130, 40));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Orders_background.png"))); // NOI18N
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1350, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        txtcusname.setEditable(false);
        txtmob.setEditable(false);
        txtemail.setEditable(false);

        txtproname.setEditable(false);
        txtpr.setEditable(false);
        txtds.setEditable(false);

        DefaultTableModel df = (DefaultTableModel) tblcus.getModel();
        DefaultTableModel prot = (DefaultTableModel) tblpro.getModel();
        try {
            Connection con = connect.dbConnect();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from customer");
            while (rs.next()) {
                df.addRow(new Object[]{rs.getString("cus_id"), rs.getString("name"), rs.getString("pnumber"), rs.getString("email")});
            }
            rs = st.executeQuery("SELECT p.pr_id, p.name, p.quantity, p.description, p.price, c.cat_id, c.name FROM product p INNER JOIN category c ON p.cat_id = c.cat_id");
            while (rs.next()) {
                prot.addRow(new Object[]{rs.getString("pr_id"), rs.getString("name"), rs.getString("quantity"), rs.getString("price"), rs.getString("description"), rs.getString("cat_id"), rs.getString(7)});
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void tblproMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblproMouseClicked
        // TODO add your handling code here:
        int index = tblpro.getSelectedRow();
        TableModel model = tblpro.getModel();
        if (index != -1) {
            String id = model.getValueAt(index, 0).toString();
            apppro = Integer.parseInt(id);
            txtproname.setText(model.getValueAt(index, 1).toString());
            txtpr.setText(model.getValueAt(index, 3).toString());
            txtds.setText(model.getValueAt(index, 4).toString());
        }
    }//GEN-LAST:event_tblproMouseClicked

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        String noOfUnits = txtquant.getText();
        if (noOfUnits.isEmpty() || Integer.parseInt(noOfUnits) <= 0) {
            JOptionPane.showMessageDialog(null, "Please enter a valid quantity.");
            return;
        }

        // Retrieve product details
        String proname = txtproname.getText();
        String prodescription = txtds.getText();
        String proprice = txtpr.getText();

        // Parse price as a double (not integer) since prices can be decimal
        double pricePerUnit = 0;
        try {
            pricePerUnit = Double.parseDouble(proprice); // Use Double.parseDouble for decimal prices
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid price format. Please enter a valid number for the price.");
            return;
        }

        // Calculate the total price for the product
        int quantity = Integer.parseInt(noOfUnits);
        double totalprice = pricePerUnit * quantity;

        // Check stock availability and if the product is already in the cart
        int checkStock = 0;
        int checkProductAlreadyExistInCart = 0;
        try {
            Connection con = connect.dbConnect();
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from product where pr_id=" + apppro);
            while (rs.next()) {
                if (rs.getInt("quantity") >= quantity) {
                    checkStock = 1; // Product is available in stock
                } else {
                    JOptionPane.showMessageDialog(null, "Product is out of Stock. Only " + rs.getInt("quantity") + " left!");
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }

        if (checkStock == 1) {
            DefaultTableModel df = (DefaultTableModel) tblcart.getModel();

            // Check if the product already exists in the cart
            if (tblcart.getRowCount() != 0) {
                for (int i = 0; i < tblcart.getRowCount(); i++) {
                    if (Integer.parseInt(df.getValueAt(i, 0).toString()) == apppro) {
                        checkProductAlreadyExistInCart = 1;
                        JOptionPane.showMessageDialog(null, "Product already exists in Cart!");
                    }
                }
            }

            // Add product to cart if not already in cart
            if (checkProductAlreadyExistInCart == 0) {
                df.addRow(new Object[]{apppro, proname, noOfUnits, proprice, prodescription, totalprice});
                finaltotalprice += totalprice; // Update total price
                lblftp.setText(String.valueOf(finaltotalprice)); // Update label with total price
                JOptionPane.showMessageDialog(null, "Product added to cart!");
            }

            clearProductFields(); // Reset product input fields
        } else {
            JOptionPane.showMessageDialog(null, "No valid quantity entered or product field is required!");
        }
    }//GEN-LAST:event_btnaddActionPerformed
    private PdfPCell createHeaderCell(String text) {
        PdfPCell cell = new PdfPCell(new Phrase(text));
        BaseColor backgroundColor = new BaseColor(255, 204, 51);
        cell.setBackgroundColor(backgroundColor);
        cell.setBorderWidth(1);
        return cell;
    }
    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:                                                                       
        if (finaltotalprice != 0 && !txtcusname.getText().equals("")) {
            orderId = getUniqueId("Bill-");

            DefaultTableModel dtm = (DefaultTableModel) tblcart.getModel();
            if (tblcart.getRowCount() != 0) {
                Connection con = null;
                try {
                    con = connect.dbConnect();
                    con.setAutoCommit(false);

                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        updateProductStock(con, dtm, i);
                    }
                    insertOrderDetails(con);
                    generatePDF();

                    con.commit();
                    JOptionPane.showMessageDialog(null, "Order saved and PDF generated successfully!");

                    resetUI();
                } catch (SQLException e) {
                    if (con != null) {
                        try {
                            con.rollback();
                        } catch (SQLException ex) {
                        }
                    }
                    JOptionPane.showMessageDialog(null, "SQL error: " + e.getMessage());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
                } finally {
                    if (con != null) {
                        try {
                            con.setAutoCommit(true);
                            con.close();
                        } catch (SQLException e) {
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Order total cannot be 0 and customer must be selected.");
        }
    }//GEN-LAST:event_btnsaveActionPerformed
    private void updateProductStock(Connection con, DefaultTableModel dtm, int rowIndex) throws SQLException {
        Statement st = con.createStatement();
        st.executeUpdate("UPDATE product SET quantity = quantity - " + Integer.valueOf(dtm.getValueAt(rowIndex, 2).toString()) + " WHERE pr_id = " + Integer.valueOf(dtm.getValueAt(rowIndex, 0).toString()));
    }

    private void insertOrderDetails(Connection con) throws SQLException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        String sql = "INSERT INTO orderdetails(unique_id, cus_id, order_date, totpaid) VALUES(?, ?, ?, ?)";
        PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1, orderId);
        ps.setInt(2, appcus);
        ps.setString(3, sdf.format(cal.getTime()));
        ps.setInt(4, finaltotalprice);
        ps.executeUpdate();
    }

 private void generatePDF() {
    try {
        // Initialize PDF Document
        com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
        String filePath = inventoryUtils.billpath + File.separator + orderId + ".pdf";
        PdfWriter.getInstance(doc, new FileOutputStream(filePath));
        doc.open();

        // Add Header and Metadata
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        Calendar cal = Calendar.getInstance();
        doc.add(new Paragraph("                                                               Inventory Management System\n"));
        doc.add(new Paragraph("****************************************************************************************************************************************"));
        doc.add(new Paragraph("\tOrder ID: " + orderId + "\nDate: " + sdf.format(cal.getTime()) + "\nTotal Paid: " + finaltotalprice));
        doc.add(new Paragraph("****************************************************************************************************************************************"));

        // Create Table with Dynamic Columns
        PdfPTable table = new PdfPTable(5);
        table.addCell(createHeaderCell("Name"));
        table.addCell(createHeaderCell("Description"));
        table.addCell(createHeaderCell("Price Per Unit"));
        table.addCell(createHeaderCell("Quantity"));
        table.addCell(createHeaderCell("Sub Total Price"));

        for (int i = 0; i < tblcart.getRowCount(); i++) {
            table.addCell(tblcart.getValueAt(i, 1).toString());
            table.addCell(tblcart.getValueAt(i, 4).toString());
            table.addCell(tblcart.getValueAt(i, 3).toString());
            table.addCell(tblcart.getValueAt(i, 2).toString());
            table.addCell(tblcart.getValueAt(i, 5).toString());
        }

        doc.add(table);

        // Add Footer
        doc.add(new Paragraph("****************************************************************************************************************************************"));
        doc.add(new Paragraph("Thank You, Please visit again!"));
        doc.close();

        // Open the PDF
        openPdf.open(filePath);

    } catch (DocumentException | FileNotFoundException e) {
        System.err.println("Error generating PDF: " + e.getMessage());
    } catch (Exception e) {
        System.err.println("Error opening PDF: " + e.getMessage());
    }
}

    private void resetUI() {
        clearProductFields();
        appcus = 0;
        orderId = null;
        DefaultTableModel cartModel = (DefaultTableModel) tblcart.getModel();
        cartModel.setRowCount(0);  // Clear the cart table
        txtcusname.setText("");
        txtmob.setText("");
        txtemail.setText("");
        lblftp.setText("0");
        finaltotalprice = 0;
    }
    private void btnclsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclsActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_btnclsActionPerformed

    private void btnrstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrstActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new manageOrder().setVisible(true);
    }//GEN-LAST:event_btnrstActionPerformed

    private void tblcusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcusMouseClicked
        // TODO add your handling code here:
        int index = tblcus.getSelectedRow();
        TableModel model = tblcus.getModel();
        String id = model.getValueAt(index, 0).toString();
        appcus = Integer.parseInt(id);

        String name = model.getValueAt(index, 1).toString();
        txtcusname.setText(name);

        String mobilenum = model.getValueAt(index, 2).toString();
        txtmob.setText(mobilenum);

        String email = model.getValueAt(index, 3).toString();
        txtemail.setText(email);

    }//GEN-LAST:event_tblcusMouseClicked

    private void tblcartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblcartMouseClicked
        // TODO add your handling code here:
        int index = tblcart.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null, "Do you want to remove this product? ", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            TableModel model = tblcart.getModel();
            String subTotal = model.getValueAt(index, 5).toString();
            finaltotalprice = finaltotalprice - Integer.parseInt(subTotal);
            lblftp.setText(String.valueOf(finaltotalprice));
            ((DefaultTableModel) tblcart.getModel()).removeRow(index);
        }
    }//GEN-LAST:event_tblcartMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageOrder.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btncls;
    private javax.swing.JButton btnrst;
    private javax.swing.JButton btnsave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblftp;
    private javax.swing.JLabel lblquant;
    private javax.swing.JTable tblcart;
    private javax.swing.JTable tblcus;
    private javax.swing.JTable tblpro;
    private javax.swing.JTextField txtcusname;
    private javax.swing.JTextField txtds;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtmob;
    private javax.swing.JTextField txtpr;
    private javax.swing.JTextField txtproname;
    private javax.swing.JTextField txtquant;
    // End of variables declaration//GEN-END:variables
}
